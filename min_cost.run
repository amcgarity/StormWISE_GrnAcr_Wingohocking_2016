reset;
model min_cost.mod;
data wingohocking.dat;
#data benefits.dat;
option solver minos;

param totImpervAcre = sum{i in I}area[i]*impfr[i];
param totAcre = sum{i in I}area[i];
display totAcre,totImpervAcre;
param Binc;
let Binc := 10;
let Bmin["volume"] := 0;
param runnum;
let runnum := 0;
for {1..37}  {
solve;
#printf "%d,",runnum >investment.csv;
printf "%8.4f,",(investment/1e6) > investment.csv; # minimum cost as $million
# Actual benefits obtained:  
# Print total Volume Reduction:
for {tp in T} printf "%8.3f,", convert[tp]*sum{i in I, j in J, k in K} s[i,k,tp]*x[i,j,k].val >> investment.csv;
# Total Greened Acres:
printf "%8.3f,", sum{i in I, j in J, k in K} x[i,j,k] >>investment.csv;
# Investment $ by subcatchment:
printf {i in I} "%8.4f,", (sum{j in J, k in K}cost[j,k]*x[i,j,k].val)/1e6 >> investment.csv;
# Investment $ by ownership:
printf {j in J} "%8.4f,", (sum{i in I, k in K}cost[j,k]*x[i,j,k].val)/1e6 >> investment.csv;
# Investment $ by GI Practice:
printf {k in K} "%8.4f,", (sum{i in I, j in J}cost[j,k]*x[i,j,k].val)/1e6 >> investment.csv;

printf "000\n" >> investment.csv;
let Bmin["volume"] := Bmin["volume"] + Binc;
let runnum := runnum + 1;
}
close investment.csv;
display investment;
display x;
